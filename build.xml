<project xmlns:ivy="antlib:org.apache.ivy.ant" name="markdownBlog" default="build" basedir=".">
  <description>
      A blog powered by markdown2
  </description>

  <property file="build.properties"/>

  <target name="resolve"
          description="Resolve ivy">
    <ivy:retrieve conf="source"/>
    <ivy:retrieve conf="lib" pattern="lib/[module]/[artifact].[ext]" />

    <unzip src="lib/${epiceditor}.zip" dest="lib"/>
  </target>

  <target name="yuicompressor">
    <echo message="compressing: ${in}" />
    <exec executable="${yuicompressor}">
      <arg value="--nomunge"/>
      <arg value="--type"/>
      <arg value="${type}"/>
      <arg value="--charset"/>
      <arg value="utf-8"/>
      <arg value="-o"/>
      <arg value="${out}"/>
      <arg value="${in}"/>
    </exec>
  </target>

  <target name="jslint">
    <echo message="jslint: ${in}" />
    <exec executable="jslint" output="jslint.out" append="true" failonerror="true">
      <arg value="--indent"/>
      <arg value="2"/>
      <arg value="--browser"/>
      <arg value="--plusplus"/>
      <arg value="--regexp"/>
      <arg value="--predef"/>
      <arg value="angular"/>
      <arg value="--predef"/>
      <arg value="EpicEditor"/>
      <arg value="--predef"/>
      <arg value="$"/>
      <arg value="--predef"/>
      <arg value="ListCtrl"/>
      <arg value="--predef"/>
      <arg value="CreateEditCtrl"/>
      <arg value="--nomen"/>
      <arg value="--"/>
      <arg value="${in}"/>
    </exec>
  </target>

  <target name="init" depends="resolve, run-jslint">
    <!-- create the time stamp -->
    <tstamp/>

    <!-- get werkzeug package directory -->
    <exec executable="python" outputproperty="werkzeug">
      <arg value="-c"/>
      <arg value="import werkzeug; print '/'.join(werkzeug.__file__.split('/')[0:-2])"/>
    </exec>

    <!-- get flask package directory -->
    <exec executable="python" outputproperty="flask">
      <arg value="-c"/>
      <arg value="import flask; print '/'.join(flask.__file__.split('/')[0:-2])"/>
    </exec>

    <!-- get markdown2 package directory -->
    <exec executable="python" outputproperty="markdown2">
      <arg value="-c"/>
      <arg value="import markdown2; print markdown2.__file__[0:-1]"/>
    </exec>
  </target>

  <target name="run-jslint">
    <property name="src.js" location="${blogapp}/static/js"/>
    <delete file="jslint.out"/>
    <antcall target="jslint">
      <param name="in" value="${blogapp}/admin/admin.js"/>
    </antcall>
    <antcall target="jslint">
      <param name="in" value="${blogapp}/admin/ng.js"/>
    </antcall>
    <antcall target="jslint">
      <param name="in" value="${src.js}/blog.js"/>
    </antcall>
    <antcall target="jslint">
      <param name="in" value="${src.js}/ng.js"/>
    </antcall>

    <antcall target="jslint">
      <param name="in" value="${utilapp}/ngModules.js"/>
    </antcall>
  </target>

  <target name="build" depends="init"
          description="generate the distribution" >

    <!-- Create the distribution directory -->
    <mkdir dir="${build}"/>

    <!-- Copy src -->
    <copy todir="${build}">
      <fileset dir="${app}"/>
    </copy>

    <copy todir="${build}/test">
      <fileset dir="${test}"/>
    </copy>

    <!-- Copy lib -->
    <copy todir="${build}/blog/bloglib">
      <fileset dir="lib/bloglib"/>
    </copy>

    <copy file="lib/${lesscss}" tofile="${build.js}/less.js"/>

    <copy todir="${build.static}" force="true">
      <fileset dir="lib/${epiceditor}"/>
<!--
      <fileset dir="/home/xi/github/EpicEditor"/>
-->
    </copy>
    <copy file="${markdown2}" todir="${build}"/>

    <zip destfile="${build}/werkzeug.zip"
      basedir="${werkzeug}"
      includes="werkzeug/"
      excludes="**/testsuite/**, **/debug/**, **/*.pyc, **/*.pyo"/>

    <zip destfile="${build}/flask.zip"
      basedir="${flask}"
      includes="flask/"
      excludes="**/testsuite/**, **/debug/**, **/*.pyc, **/*.pyo"/>
  </target>

  <target name="dist" depends="build"
          description="generate the distribution" >

    <!-- create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- copy src -->
    <copy todir="${dist}">
      <fileset dir="${build}/">
        <exclude name="**/test/"/>
      </fileset>
    </copy>

    <!-- copy/move lib -->
    <move file="${dist.static}/epiceditor/js/epiceditor.min.js"
          tofile="${dist.static}/epiceditor/js/epiceditor.js" force="true"/>
    <antcall target="compress"/>
  </target>

  <target name="compress">
    <antcall target="yuicompressor">
      <param name="in" value="${dist}/app/admin/admin.js"/>
      <param name="out" value="${dist}/app/admin/admin.js"/>
      <param name="type" value="js"/>
    </antcall>

    <antcall target="yuicompressor">
      <param name="in" value="${dist}/app/admin/ng.js"/>
      <param name="out" value="${dist}/app/admin/ng.js"/>
      <param name="type" value="js"/>
    </antcall>

    <antcall target="yuicompressor">
      <param name="in" value="${dist}/app/static/js/blog.js"/>
      <param name="out" value="${dist}/app/static/js/blog.js"/>
      <param name="type" value="js"/>
    </antcall>

    <antcall target="yuicompressor">
      <param name="in" value="${dist}/app/static/js/ng.js"/>
      <param name="out" value="${dist}/app/static/js/ng.js"/>
      <param name="type" value="js"/>
    </antcall>
  </target>

  <target name="test" depends="build"
          description="unit test">
    <!-- Execute the unittest -->
    <exec executable="python" dir="${build}\test\serverside">
      <arg value="testmycommentapi.py"/>
      <arg value="${gaesdk}"/>
    </exec>

    <exec executable="python" dir="${build}\test\serverside">
      <arg value="testmyblogapi.py"/>
      <arg value="${gaesdk}"/>
    </exec>
  </target>

  <target name="clean"
          description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="lib"/>
  </target>

  <target name="cleanivy"
          description="clean ivy cache">
    <ivy:cleancache />
  </target>
</project>
